{"version":3,"sources":["Chart.tsx","MainUnit.tsx","commitStats.ts","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","container","background","Chart","props","classes","commits","reverse","Fragment","className","data","margin","top","right","bottom","left","dataKey","unit","angle","position","style","textAnchor","type","stroke","dot","root","width","overflowX","paper","paddingBottom","table","minWidth","Benchmarks","tablecell","detail","paddingLeft","paddingRight","percent","n","base","toFixed","row","stat","percent_expr","expressions","content_rows","tab","push","TableCell","align","declarations","functions","unknown_types","partial_unknown_types","type_mismatches","Math","floor","database_loaded_time","milliseconds","item_collection_time","inferenece_time","total_time","TableRow","key","project_name","component","scope","str","substring","length","lastIndexOf","shortName","roots","crates","modules","total_expresions","commit","totalExpressions","total_unknown","totalPartial","totalUnknown","headers","Container","Box","display","p","flexGrow","commit_sha","timestamp","FormControl","RadioGroup","aria-label","name","value","onChange","event","setTab","target","FormControlLabel","control","Radio","color","label","labelPlacement","Table","size","TableHead","TableBody","rows","stats","MainUnit","React","useState","setValue","handleTabChange","newValue","map","Paper","total_partial","errorRate","exprs","totalError","fetchCommits","a","fetch","res","json","parseTime","s","endsWith","parseFloat","fetchStats","sha","Duration","fromMillis","Object","entries","sort","b","paddingTop","spacing","height","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","setCommits","useEffect","fetchData","maxWidth","my","Typography","variant","gutterBottom","document","querySelector"],"mappings":"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","file":"static/js/main.c45e9e7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, BarChart, Bar } from 'recharts';\r\nimport { CommitStat } from './commitStats';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n      background: \"#eee\",\r\n    },\r\n  }))\r\n\r\ninterface ChartProps {\r\n    commits: CommitStat[]\r\n}\r\n\r\nexport default function Chart(props: ChartProps) {\r\n    const classes = useStyles();\r\n    const commits = [...props.commits];\r\n    commits.reverse();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ResponsiveContainer className={classes.container}>\r\n                <LineChart\r\n                    data={commits}\r\n                    margin={{\r\n                        top: 16,\r\n                        right: 16,\r\n                        bottom: 0,\r\n                        left: 24,\r\n                    }}\r\n                >\r\n                    <XAxis dataKey=\"commit_sha\"/>\r\n                    <YAxis  unit=\"%\">\r\n                        <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\r\n                            Error Rate\r\n                        </Label>\r\n                    </YAxis>\r\n                    {/* <Bar dataKey=\"totalUnknown\" fill=\"#8884d8\" /> */}\r\n                    <Line type=\"monotone\" dataKey=\"errorRate\" stroke=\"#556CD6\" dot={false} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Container, Box, FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport {CommitStat, Stats} from './commitStats';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    },\r\n    paper: {\r\n        paddingBottom: '100px',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\ninterface BenchmarksProps {\r\n    commit: CommitStat,\r\n    setTab: (tab: string) => void,\r\n    tab: string,\r\n}\r\n\r\nfunction Benchmarks(props: BenchmarksProps) {\r\n    const classes = makeStyles({\r\n        tablecell: {\r\n            // fontSize: '0.8em'\r\n        },\r\n        detail: {\r\n            paddingLeft: '1em',\r\n            paddingRight: '1em'\r\n        }\r\n    })()\r\n\r\n    const shortName = function (str: string): string {\r\n        var base = str.substring(0, str.length - 1)\r\n        base = base.substring(base.lastIndexOf('/') + 1, str.length);\r\n\r\n        return base;\r\n    }\r\n\r\n    const percent = function(n: number, base: number): string {\r\n        if (base === 0) return \"0%\";\r\n\r\n            const p = (n / base) * 100.0\r\n            return `${p.toFixed(2)}%`\r\n    }\r\n\r\n    const row = function (stat: Stats) {\r\n        const percent_expr = function (n: number): string {\r\n            return percent(n, stat.expressions)\r\n        }\r\n\r\n        let content_rows = [];\r\n\r\n        if (props.tab === \"0\") {\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.declarations}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.functions}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.expressions}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.unknown_types} ({percent_expr(stat.unknown_types)})</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.partial_unknown_types} ({percent_expr(stat.partial_unknown_types)})</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{stat.type_mismatches}</TableCell>);\r\n        } else {\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{Math.floor(stat.database_loaded_time.milliseconds)}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{Math.floor(stat.item_collection_time.milliseconds)}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{Math.floor(stat.inferenece_time.milliseconds)}</TableCell>);\r\n            content_rows.push(<TableCell className={classes.tablecell} align=\"right\">{Math.floor(stat.total_time.milliseconds)}</TableCell>);\r\n        }\r\n\r\n        return (<TableRow key={stat.project_name}>\r\n            <TableCell className={classes.tablecell} component=\"th\" scope=\"row\">{shortName(stat.project_name)}</TableCell>\r\n            <TableCell className={classes.tablecell} align=\"right\">{stat.roots}</TableCell>\r\n            <TableCell className={classes.tablecell} align=\"right\">{stat.crates} [{stat.modules}]</TableCell>\r\n\r\n            {content_rows}\r\n\r\n        </TableRow>)\r\n    }\r\n\r\n    const rows = function () {\r\n        let rows = [];\r\n        for (let stat of props.commit.stats) {\r\n            rows.push(row(stat))\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        props.setTab(event.target.value);\r\n    };\r\n\r\n    let total_expresions = props.commit.totalExpressions\r\n    let total_unknown = props.commit.totalPartial + props.commit.totalUnknown;\r\n\r\n    let headers = []\r\n    if (props.tab === \"0\") {\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Decl</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Func</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Expr</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Unknown</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Partial</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Mismatches</TableCell>);\r\n    } else {\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Database Loaded(ms)</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Items(ms)</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Inference(ms)</TableCell>);\r\n        headers.push(<TableCell className={classes.tablecell} align=\"right\">Total(ms)</TableCell>);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Box display=\"flex\" p={1}>\r\n                <Box flexGrow={1}>\r\n                    <p>Commit SHA: {props.commit.commit_sha}</p>\r\n                    <Box display=\"flex\">\r\n                        <Box className={classes.detail}><small>Timestamp: {props.commit.timestamp}</small></Box>\r\n                        <Box className={classes.detail}><small>Total Expression: {total_expresions}</small></Box> \r\n                        <Box className={classes.detail}><small>Total Unknown + Partial: {total_unknown} ({percent(total_unknown, total_expresions)})</small></Box> \r\n                    </Box>\r\n                </Box>\r\n                <Box>\r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"position\" name=\"position\" value={props.tab} onChange={handleChange} row>\r\n                            <FormControlLabel\r\n                                value=\"0\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"Syntax\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"1\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"Time(ms)\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Table size=\"small\" aria-label=\"Benchmarks table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tablecell}>Project Name</TableCell>\r\n                        <TableCell className={classes.tablecell} align=\"right\">Roots</TableCell>\r\n                        <TableCell className={classes.tablecell} align=\"right\">Crates [Modules]</TableCell>\r\n                        {headers}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows()}\r\n                </TableBody>\r\n            </Table>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\ninterface MainUnitProps {\r\n    commits: CommitStat[];\r\n}\r\n\r\nexport default function MainUnit(props: MainUnitProps) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(\"0\");\r\n\r\n    const handleTabChange = (newValue: string): void => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.commits.map((commit) =>\r\n                <Paper className={classes.paper} key={commit.commit_sha}>\r\n                    <Benchmarks commit={commit} setTab={handleTabChange} tab={value} />\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}","import { Duration } from 'luxon';\r\n\r\nexport interface CommitStat {\r\n    timestamp: number,\r\n    commit_sha: string,\r\n    stats: Stats[],\r\n    \r\n    totalExpressions: number,\r\n    totalUnknown : number,\r\n    totalPartial: number,\r\n    errorRate: number,\r\n}\r\n\r\ntype FloatWithUnit = Duration;\r\n\r\nexport interface Stats {\r\n    database_loaded_time: FloatWithUnit,\r\n    declarations: number,\r\n    expressions: number,\r\n    functions: number,\r\n    inferenece_time: FloatWithUnit,\r\n    item_collection_time: FloatWithUnit,\r\n    crates: number,\r\n    modules: number,\r\n    partial_unknown_types: number,\r\n    project_name: string,\r\n    roots: number,\r\n    total_time: FloatWithUnit,\r\n    type_mismatches: number,\r\n    unknown_types: number\r\n}\r\n\r\nfunction totalExpressions(stats: Stats[]) : number {\r\n    let total_expresions = 0;\r\n    for(let stat of stats ) {\r\n        total_expresions += stat.expressions;\r\n    }\r\n    return total_expresions;\r\n}\r\n\r\nfunction totalUnknown(stats: Stats[]) : number {\r\n    let total_unknown = 0;\r\n    for(let stat of stats ) {\r\n        total_unknown += stat.unknown_types;\r\n    }\r\n    return total_unknown;\r\n}\r\n\r\nfunction totalPartial(stats: Stats[]) : number {\r\n    let total_partial = 0;\r\n    for(let stat of stats ) {\r\n        total_partial += stat.partial_unknown_types;\r\n    }\r\n    return total_partial;\r\n}\r\n\r\nfunction errorRate(stats: Stats[]) : number {\r\n    let exprs = totalExpressions(stats)\r\n    let totalError = totalUnknown(stats) + totalPartial(stats)\r\n    if(totalError === 0) return 0;\r\n    \r\n    return (totalError / exprs) * 100.0\r\n}\r\n\r\n\r\nexport const fetchCommits = async function (): Promise<CommitStat[]> {\r\n    const res = await fetch('./data/commits.json')\r\n    const json = await res.json()\r\n    let commits: CommitStat[] = [];\r\n\r\n    const parseTime = function (s: string): number {\r\n        if (s.endsWith(\"ms\")) {\r\n            return parseFloat(s.substring(0, s.length - 2))\r\n        }\r\n\r\n        return parseFloat(s.substring(0, s.length - 1)) * 1000\r\n    }\r\n\r\n    const fetchStats = async function (sha: string): Promise<Stats[]> {\r\n        const res = await fetch('./data/' + sha + '.json')\r\n        const json = await res.json()\r\n        return json.map((s: any) => {\r\n            s.database_loaded_time = Duration.fromMillis(parseTime(s.database_loaded_time))\r\n            s.inferenece_time = Duration.fromMillis(parseTime(s.inferenece_time))\r\n            s.item_collection_time = Duration.fromMillis(parseTime(s.item_collection_time))\r\n            s.total_time = Duration.fromMillis(parseTime(s.total_time))\r\n            return s\r\n        })\r\n    }\r\n\r\n    for (let [key, value] of Object.entries(json.commits)) {\r\n        let stats = await fetchStats(key);\r\n        \r\n        commits.push({\r\n            timestamp: value as number,\r\n            commit_sha: key,\r\n            stats,\r\n            totalExpressions: totalExpressions(stats),\r\n            totalUnknown: totalUnknown(stats),\r\n            totalPartial: totalPartial(stats),\r\n            errorRate: errorRate(stats),\r\n        })\r\n    }\r\n\r\n    // Sort by timestamp    \r\n    return commits.sort((a,b) => {\r\n        return a.timestamp - b.timestamp\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Chart from './Chart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport MainUnit from './MainUnit';\nimport {CommitStat, fetchCommits} from './commitStats';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    height: '240px',\n  }\n}))\n\nexport default function App() {\n  const classes = useStyles();\n  const [commits, setCommits] = useState([] as Array<CommitStat>);\n\n  useEffect(() => {\n    async function fetchData() {\n        const commits = await fetchCommits();\n        setCommits(commits)\n    }\n    fetchData()\n  }, [])\n\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4} >\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          RA Stats Viewer\n        </Typography>\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Paper className={classes.paper}>\n            <Chart commits={commits}/>\n          </Paper>\n          <MainUnit commits={commits}/>\n        </Container>\n      </Box>\n    </Container>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}